# CircleCI 2.0 configuration file
version: 2
x-defaults:
  images:
    # TODO: bundler env variables --jobs=4 --retry=3
    ruby: &image-ruby
      image: "circleci/ruby:2.6.3"
      environment:
        DEPLOY_ENV: "development"
        RACK_ENV: "development"
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: ""
        POSTGRES_HOST: "postgres"
        POSTGRES_URI: "postgresql:///resources"
  steps:
    restore_cache: &step-restore_cache
      restore_cache:
        keys:
          - v1-dependencies-{{ checksum "./base/Gemfile.lock" }}
    link_all: &step-link_all
      run:
        name: "link all services to the defaults"
        command: "bin/local-link-all"
workflows:
  version: 2
  primary:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - typecheck:
          requires:
            - setup
      - build:
          requires:
            - setup
jobs:
  setup:
    docker:
      - *image-ruby
      - image: "circleci/postgres:11.2"
    steps:
      - "checkout"
      - *step-restore_cache
      - *step-link_all
      - run:
          name: "ensuring basic dependencies installed"
          command: "sudo apt install postgresql-client"
      - run:
          name: "wait for the database to be ready"
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: "setup the basics of the database"
          command: "bin/local base ../.docker-compose/postgres/docker-entrypoint-initdb.d/create-users-and-groups.sh"
      - run:
          name: "install all libraries"
          command: "bin/local base bundle install"
      - run:
          name: "run migrations"
          command: "bin/local base bundle exec rake db:migrate"
      - save_cache:
          paths: ["./vendor/bundle", ".git"]
          key: v1-dependencies-{{ checksum "./base/Gemfile.lock" }}
  lint:
    docker:
      - *image-ruby
    steps:
      - "checkout"
      - *step-restore_cache
      - *step-link_all
      - run:
          name: "check against linter"
          command: "bin/local-each bin/local-lint"
  typecheck:
    docker:
      - *image-ruby
    steps:
      - "checkout"
      - *step-restore_cache
      - *step-link_all
      - run:
          name: "check against typechecker"
          command: "bin/local-each bin/local-typecheck"
  build:
    machine: true
    steps:
      - "checkout"
      - *step-restore_cache
      - *step-link_all
      - run:
          name: "build images"
          command: "bin/local-each bin/docker-build-ci"
